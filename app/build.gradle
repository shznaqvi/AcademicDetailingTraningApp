plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 31
     buildFeatures {
        dataBinding true
    }
    Properties versionProps = new Properties()
    def versionPropsFile = file('version.properties')

    //Create a version properties file and add required properties with default values
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_BUILD'] = "0"
        versionProps['VERSION_NUMBER'] = "0"

        Writer writer = new FileWriter(versionPropsFile, false)
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    // Read existing
    if (versionPropsFile.canRead()) {
        versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0
        def versionType = "D"


        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || ':app:assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1
            versionType = "R"
        }

        def versionNumber = 2
        //  def versionMinor = 0
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        //def versionNumber = versionProps['VERSION_NUMBER'].toInteger() + value

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps['VERSION_NUMBER'] = versionNumber.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "detail.acad.hassannaqvi.edu.aku.academicdetailing"
            versionCode versionBuild
            versionName "${versionNumber}.${versionPatch}${versionType}"
            minSdk 22
            targetSdk 30
            compileSdkVersion 31
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->

                def appName = rootProject.name
                def date = new Date()
                def formattedDate = date.format('yyyy_MM_dd')

                def outputDir = new File("${project.buildDir.absolutePath}/outputs/apk/${variant.flavorName}/${variant.buildType.name}")
                //def outputFileName = "app-${variant.flavorName}-${variant.buildType.name}.apk"
                def outputFileName = "${appName}_${formattedDate}_${versionType}v${versionBuild}.apk"
                // def outputFile = new File("$outputDir/$outputFileName")
                variant.packageApplicationProvider.get().outputDirectory = new File("$outputDir")
                output.outputFileName = outputFileName
                /*  if (outputFileName != null && outputFileName.endsWith('.apk')) {
                      //output.outputFileName = outputFileName
                      output.outputFileName = new File("${project.buildDir.absolutePath}/outputs/apk/", "${outputDir}-${versionMajor}.${versionMinor}.${versionPatch}-${outputFileName}")
                  }*/

            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    /*Add Compile options in following block*/
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    // NOT NEEDED AFTER KOTLIN 1.0 RELEASE
    // implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // DateTimePicker
    implementation 'com.github.BlackBoxVision:datetimepicker-edittext:v0.4.0'
    // Form Validator
    implementation 'com.github.AliAzaz:AndroidValidatorCrawler:1.0.3'

    // Some string
    api 'org.apache.commons:commons-lang3:3.12.0'

    // EditText Picker (Ali)
    implementation 'com.github.AliAzaz:Edittext-Library:2.0.0'

    //implementation 'com.github.AliAzaz:TextPicker-Library:0.0.2'
    //implementation 'com.github.BlackBoxVision:datetimepicker-edittext:v0.4.0'
    // Permissions Handeling
    implementation 'com.karumi:dexter:6.2.3'

    // WorkManager(Java only)
    implementation "androidx.work:work-runtime:2.7.1"

// Sqlcipher
    implementation 'net.zetetic:android-database-sqlcipher:4.5.1'
    implementation "androidx.sqlite:sqlite-ktx:2.2.0"
    implementation "androidx.sqlite:sqlite:2.2.0"

    //Rooted
    implementation 'com.scottyab:rootbeer-lib:0.1.0'

    // for Debug Database
    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

    // ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.17.1'

// WorkManager
    def work_version = '2.5.0'
    implementation "androidx.work:work-runtime:$work_version"// WorkManager (Java only)
    implementation "androidx.work:work-runtime-ktx:$work_version" // WorkManager (Kotlin + coroutines)

    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.kaopiz:kprogresshud:1.2.0'

    /*
  //  implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Combobox
    implementation 'com.github.arcadefire:nice-spinner:1.4.4'

    implementation 'com.github.amlcurran.showcaseview:library:5.4.3'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.google.guava:guava:31.1-jre'


    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'com.github.AliAzaz:TextPicker-Library:0.0.2'
    implementation 'com.github.BlackBoxVision:datetimepicker-edittext:v0.4.0'
    //Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    implementation 'me.relex:circleindicator:2.1.6'

    //ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.17.1'


    // Permissions Handeling
    implementation 'com.karumi:dexter:6.2.3'

    // WorkManager
    def work_version = '2.5.0'
    implementation "androidx.work:work-runtime:$work_version"// WorkManager (Java only)
    implementation "androidx.work:work-runtime-ktx:$work_version" // WorkManager (Kotlin + coroutines)

    // Sqlcipher
    implementation 'net.zetetic:android-database-sqlcipher:4.5.1'
    implementation "androidx.sqlite:sqlite-ktx:2.2.0"*/
}
